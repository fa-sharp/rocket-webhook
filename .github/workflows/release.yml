name: Release
on:
  push:
    branches:
      - main
env:
  RUST_VERSION: "1.90"

jobs:
  # Release unpublished packages.
  release-plz-release:
    name: Publish
    runs-on: ubuntu-latest
    if: ${{ github.repository_owner == 'fa-sharp' }}
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install Rust toolchain
        run: rustup toolchain install ${{ env.RUST_VERSION }} --profile minimal --no-self-update
      - name: Setup rust-cache
        uses: Swatinem/rust-cache@v2
      - name: Run release-plz
        uses: release-plz/action@v0.5
        with:
          command: release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

  # Create a PR with the new versions and changelog, preparing the next release.
  release-plz-pr:
    name: Release PR
    runs-on: ubuntu-latest
    if: ${{ github.repository_owner == 'fa-sharp' }}
    permissions:
      contents: write
      pull-requests: write
    concurrency:
      group: release-plz-${{ github.ref }}
      cancel-in-progress: false
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install Rust toolchain
        run: rustup toolchain install ${{ env.RUST_VERSION }} --profile minimal --no-self-update
      - name: Setup rust-cache
        uses: Swatinem/rust-cache@v2
      - name: Run release-plz
        uses: release-plz/action@v0.5
        with:
          command: release-pr
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
